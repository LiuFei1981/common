// Code Generated By gen-enumer For "Enum Type: SNSGetSubscriptionAttribute" - DO NOT EDIT;

package snsgetsubscriptionattribute

import (
	"fmt"
	"strconv"
)

// enum names constants
const (
	_SNSGetSubscriptionAttributeName_0  = "UNKNOWN"
	_SNSGetSubscriptionAttributeName_1  = "ConfirmationWasAuthenticated"
	_SNSGetSubscriptionAttributeName_2  = "DeliveryPolicy"
	_SNSGetSubscriptionAttributeName_3  = "EffectiveDeliveryPolicy"
	_SNSGetSubscriptionAttributeName_4  = "FilterPolicy"
	_SNSGetSubscriptionAttributeName_5  = "Owner"
	_SNSGetSubscriptionAttributeName_6  = "PendingConfirmation"
	_SNSGetSubscriptionAttributeName_7  = "RawMessageDelivery"
	_SNSGetSubscriptionAttributeName_8  = "RedrivePolicy"
	_SNSGetSubscriptionAttributeName_9  = "SubscriptionArn"
	_SNSGetSubscriptionAttributeName_10 = "TopicArn"
)

// var declares of enum indexes
var (
	_SNSGetSubscriptionAttributeIndex_0  = [...]uint8{0, 7}
	_SNSGetSubscriptionAttributeIndex_1  = [...]uint8{0, 28}
	_SNSGetSubscriptionAttributeIndex_2  = [...]uint8{0, 14}
	_SNSGetSubscriptionAttributeIndex_3  = [...]uint8{0, 23}
	_SNSGetSubscriptionAttributeIndex_4  = [...]uint8{0, 12}
	_SNSGetSubscriptionAttributeIndex_5  = [...]uint8{0, 5}
	_SNSGetSubscriptionAttributeIndex_6  = [...]uint8{0, 19}
	_SNSGetSubscriptionAttributeIndex_7  = [...]uint8{0, 18}
	_SNSGetSubscriptionAttributeIndex_8  = [...]uint8{0, 13}
	_SNSGetSubscriptionAttributeIndex_9  = [...]uint8{0, 15}
	_SNSGetSubscriptionAttributeIndex_10 = [...]uint8{0, 8}
)

func (i SNSGetSubscriptionAttribute) String() string {
	switch {
	case i == UNKNOWN:
		return _SNSGetSubscriptionAttributeName_0
	case i == ConfirmationWasAuthenticated:
		return _SNSGetSubscriptionAttributeName_1
	case i == DeliveryPolicy:
		return _SNSGetSubscriptionAttributeName_2
	case i == EffectiveDeliveryPolicy:
		return _SNSGetSubscriptionAttributeName_3
	case i == FilterPolicy:
		return _SNSGetSubscriptionAttributeName_4
	case i == Owner:
		return _SNSGetSubscriptionAttributeName_5
	case i == PendingConfirmation:
		return _SNSGetSubscriptionAttributeName_6
	case i == RawMessageDelivery:
		return _SNSGetSubscriptionAttributeName_7
	case i == RedrivePolicy:
		return _SNSGetSubscriptionAttributeName_8
	case i == SubscriptionArn:
		return _SNSGetSubscriptionAttributeName_9
	case i == TopicArn:
		return _SNSGetSubscriptionAttributeName_10
	default:
		return ""
	}
}

var _SNSGetSubscriptionAttributeValues = []SNSGetSubscriptionAttribute{
	0,  // UNKNOWN
	1,  // ConfirmationWasAuthenticated
	2,  // DeliveryPolicy
	3,  // EffectiveDeliveryPolicy
	4,  // FilterPolicy
	5,  // Owner
	6,  // PendingConfirmation
	7,  // RawMessageDelivery
	8,  // RedrivePolicy
	9,  // SubscriptionArn
	10, // TopicArn
}

var _SNSGetSubscriptionAttributeNameToValueMap = map[string]SNSGetSubscriptionAttribute{
	_SNSGetSubscriptionAttributeName_0[0:7]:  0,  // UNKNOWN
	_SNSGetSubscriptionAttributeName_1[0:28]: 1,  // ConfirmationWasAuthenticated
	_SNSGetSubscriptionAttributeName_2[0:14]: 2,  // DeliveryPolicy
	_SNSGetSubscriptionAttributeName_3[0:23]: 3,  // EffectiveDeliveryPolicy
	_SNSGetSubscriptionAttributeName_4[0:12]: 4,  // FilterPolicy
	_SNSGetSubscriptionAttributeName_5[0:5]:  5,  // Owner
	_SNSGetSubscriptionAttributeName_6[0:19]: 6,  // PendingConfirmation
	_SNSGetSubscriptionAttributeName_7[0:18]: 7,  // RawMessageDelivery
	_SNSGetSubscriptionAttributeName_8[0:13]: 8,  // RedrivePolicy
	_SNSGetSubscriptionAttributeName_9[0:15]: 9,  // SubscriptionArn
	_SNSGetSubscriptionAttributeName_10[0:8]: 10, // TopicArn
}

var _SNSGetSubscriptionAttributeValueToKeyMap = map[SNSGetSubscriptionAttribute]string{
	0:  _SNSGetSubscriptionAttributeKey_0,  // UNKNOWN
	1:  _SNSGetSubscriptionAttributeKey_1,  // ConfirmationWasAuthenticated
	2:  _SNSGetSubscriptionAttributeKey_2,  // DeliveryPolicy
	3:  _SNSGetSubscriptionAttributeKey_3,  // EffectiveDeliveryPolicy
	4:  _SNSGetSubscriptionAttributeKey_4,  // FilterPolicy
	5:  _SNSGetSubscriptionAttributeKey_5,  // Owner
	6:  _SNSGetSubscriptionAttributeKey_6,  // PendingConfirmation
	7:  _SNSGetSubscriptionAttributeKey_7,  // RawMessageDelivery
	8:  _SNSGetSubscriptionAttributeKey_8,  // RedrivePolicy
	9:  _SNSGetSubscriptionAttributeKey_9,  // SubscriptionArn
	10: _SNSGetSubscriptionAttributeKey_10, // TopicArn
}

var _SNSGetSubscriptionAttributeValueToCaptionMap = map[SNSGetSubscriptionAttribute]string{
	0:  _SNSGetSubscriptionAttributeCaption_0,  // UNKNOWN
	1:  _SNSGetSubscriptionAttributeCaption_1,  // ConfirmationWasAuthenticated
	2:  _SNSGetSubscriptionAttributeCaption_2,  // DeliveryPolicy
	3:  _SNSGetSubscriptionAttributeCaption_3,  // EffectiveDeliveryPolicy
	4:  _SNSGetSubscriptionAttributeCaption_4,  // FilterPolicy
	5:  _SNSGetSubscriptionAttributeCaption_5,  // Owner
	6:  _SNSGetSubscriptionAttributeCaption_6,  // PendingConfirmation
	7:  _SNSGetSubscriptionAttributeCaption_7,  // RawMessageDelivery
	8:  _SNSGetSubscriptionAttributeCaption_8,  // RedrivePolicy
	9:  _SNSGetSubscriptionAttributeCaption_9,  // SubscriptionArn
	10: _SNSGetSubscriptionAttributeCaption_10, // TopicArn
}

var _SNSGetSubscriptionAttributeValueToDescriptionMap = map[SNSGetSubscriptionAttribute]string{
	0:  _SNSGetSubscriptionAttributeDescription_0,  // UNKNOWN
	1:  _SNSGetSubscriptionAttributeDescription_1,  // ConfirmationWasAuthenticated
	2:  _SNSGetSubscriptionAttributeDescription_2,  // DeliveryPolicy
	3:  _SNSGetSubscriptionAttributeDescription_3,  // EffectiveDeliveryPolicy
	4:  _SNSGetSubscriptionAttributeDescription_4,  // FilterPolicy
	5:  _SNSGetSubscriptionAttributeDescription_5,  // Owner
	6:  _SNSGetSubscriptionAttributeDescription_6,  // PendingConfirmation
	7:  _SNSGetSubscriptionAttributeDescription_7,  // RawMessageDelivery
	8:  _SNSGetSubscriptionAttributeDescription_8,  // RedrivePolicy
	9:  _SNSGetSubscriptionAttributeDescription_9,  // SubscriptionArn
	10: _SNSGetSubscriptionAttributeDescription_10, // TopicArn
}

// Valid returns 'true' if the value is listed in the SNSGetSubscriptionAttribute enum map definition, 'false' otherwise
func (i SNSGetSubscriptionAttribute) Valid() bool {
	for _, v := range _SNSGetSubscriptionAttributeValues {
		if i == v {
			return true
		}
	}

	return false
}

// ParseByName retrieves a SNSGetSubscriptionAttribute enum value from the enum string name,
// throws an error if the param is not part of the enum
func (i SNSGetSubscriptionAttribute) ParseByName(s string) (SNSGetSubscriptionAttribute, error) {
	if val, ok := _SNSGetSubscriptionAttributeNameToValueMap[s]; ok {
		// parse ok
		return val, nil
	}

	// error
	return -1, fmt.Errorf("Enum Name of %s Not Expected In SNSGetSubscriptionAttribute Values List", s)
}

// ParseByKey retrieves a SNSGetSubscriptionAttribute enum value from the enum string key,
// throws an error if the param is not part of the enum
func (i SNSGetSubscriptionAttribute) ParseByKey(s string) (SNSGetSubscriptionAttribute, error) {
	for k, v := range _SNSGetSubscriptionAttributeValueToKeyMap {
		if v == s {
			// parse ok
			return k, nil
		}
	}

	// error
	return -1, fmt.Errorf("Enum Key of %s Not Expected In SNSGetSubscriptionAttribute Keys List", s)
}

// Key retrieves a SNSGetSubscriptionAttribute enum string key
func (i SNSGetSubscriptionAttribute) Key() string {
	if val, ok := _SNSGetSubscriptionAttributeValueToKeyMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Caption retrieves a SNSGetSubscriptionAttribute enum string caption
func (i SNSGetSubscriptionAttribute) Caption() string {
	if val, ok := _SNSGetSubscriptionAttributeValueToCaptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Description retrieves a SNSGetSubscriptionAttribute enum string description
func (i SNSGetSubscriptionAttribute) Description() string {
	if val, ok := _SNSGetSubscriptionAttributeValueToDescriptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// IntValue gets the intrinsic enum integer value
func (i SNSGetSubscriptionAttribute) IntValue() int {
	return int(i)
}

// IntString gets the intrinsic enum integer value represented in string format
func (i SNSGetSubscriptionAttribute) IntString() string {
	return strconv.Itoa(int(i))
}

// ValueSlice returns all values of the enum SNSGetSubscriptionAttribute in a slice
func (i SNSGetSubscriptionAttribute) ValueSlice() []SNSGetSubscriptionAttribute {
	return _SNSGetSubscriptionAttributeValues
}

// NameMap returns all names of the enum SNSGetSubscriptionAttribute in a K:name,V:SNSGetSubscriptionAttribute map
func (i SNSGetSubscriptionAttribute) NameMap() map[string]SNSGetSubscriptionAttribute {
	return _SNSGetSubscriptionAttributeNameToValueMap
}

// KeyMap returns all keys of the enum SNSGetSubscriptionAttribute in a K:SNSGetSubscriptionAttribute,V:key map
func (i SNSGetSubscriptionAttribute) KeyMap() map[SNSGetSubscriptionAttribute]string {
	return _SNSGetSubscriptionAttributeValueToKeyMap
}

// CaptionMap returns all captions of the enum SNSGetSubscriptionAttribute in a K:SNSGetSubscriptionAttribute,V:caption map
func (i SNSGetSubscriptionAttribute) CaptionMap() map[SNSGetSubscriptionAttribute]string {
	return _SNSGetSubscriptionAttributeValueToCaptionMap
}

// DescriptionMap returns all descriptions of the enum SNSGetSubscriptionAttribute in a K:SNSGetSubscriptionAttribute,V:description map
func (i SNSGetSubscriptionAttribute) DescriptionMap() map[SNSGetSubscriptionAttribute]string {
	return _SNSGetSubscriptionAttributeValueToDescriptionMap
}
