// Code Generated By gen-enumer For "Enum Type: SNSCreateTopicAttribute" - DO NOT EDIT;

/*
 * Copyright 2020-2023 Aldelo, LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package snscreatetopicattribute

import (
	"fmt"
	"strconv"
)

// enum names constants
const (
	_SNSCreateTopicAttributeName_0 = "UNKNOWN"
	_SNSCreateTopicAttributeName_1 = "DeliveryPolicy"
	_SNSCreateTopicAttributeName_2 = "DisplayName"
	_SNSCreateTopicAttributeName_3 = "Policy"
	_SNSCreateTopicAttributeName_4 = "KmsMasterKeyId"
)

// var declares of enum indexes
var (
	_SNSCreateTopicAttributeIndex_0 = [...]uint8{0, 7}
	_SNSCreateTopicAttributeIndex_1 = [...]uint8{0, 14}
	_SNSCreateTopicAttributeIndex_2 = [...]uint8{0, 11}
	_SNSCreateTopicAttributeIndex_3 = [...]uint8{0, 6}
	_SNSCreateTopicAttributeIndex_4 = [...]uint8{0, 14}
)

func (i SNSCreateTopicAttribute) String() string {
	switch {
	case i == UNKNOWN:
		return _SNSCreateTopicAttributeName_0
	case i == DeliveryPolicy:
		return _SNSCreateTopicAttributeName_1
	case i == DisplayName:
		return _SNSCreateTopicAttributeName_2
	case i == Policy:
		return _SNSCreateTopicAttributeName_3
	case i == KmsMasterKeyId:
		return _SNSCreateTopicAttributeName_4
	default:
		return ""
	}
}

var _SNSCreateTopicAttributeValues = []SNSCreateTopicAttribute{
	0, // UNKNOWN
	1, // DeliveryPolicy
	2, // DisplayName
	3, // Policy
	4, // KmsMasterKeyId
}

var _SNSCreateTopicAttributeNameToValueMap = map[string]SNSCreateTopicAttribute{
	_SNSCreateTopicAttributeName_0[0:7]:  0, // UNKNOWN
	_SNSCreateTopicAttributeName_1[0:14]: 1, // DeliveryPolicy
	_SNSCreateTopicAttributeName_2[0:11]: 2, // DisplayName
	_SNSCreateTopicAttributeName_3[0:6]:  3, // Policy
	_SNSCreateTopicAttributeName_4[0:14]: 4, // KmsMasterKeyId
}

var _SNSCreateTopicAttributeValueToKeyMap = map[SNSCreateTopicAttribute]string{
	0: _SNSCreateTopicAttributeKey_0, // UNKNOWN
	1: _SNSCreateTopicAttributeKey_1, // DeliveryPolicy
	2: _SNSCreateTopicAttributeKey_2, // DisplayName
	3: _SNSCreateTopicAttributeKey_3, // Policy
	4: _SNSCreateTopicAttributeKey_4, // KmsMasterKeyId
}

var _SNSCreateTopicAttributeValueToCaptionMap = map[SNSCreateTopicAttribute]string{
	0: _SNSCreateTopicAttributeCaption_0, // UNKNOWN
	1: _SNSCreateTopicAttributeCaption_1, // DeliveryPolicy
	2: _SNSCreateTopicAttributeCaption_2, // DisplayName
	3: _SNSCreateTopicAttributeCaption_3, // Policy
	4: _SNSCreateTopicAttributeCaption_4, // KmsMasterKeyId
}

var _SNSCreateTopicAttributeValueToDescriptionMap = map[SNSCreateTopicAttribute]string{
	0: _SNSCreateTopicAttributeDescription_0, // UNKNOWN
	1: _SNSCreateTopicAttributeDescription_1, // DeliveryPolicy
	2: _SNSCreateTopicAttributeDescription_2, // DisplayName
	3: _SNSCreateTopicAttributeDescription_3, // Policy
	4: _SNSCreateTopicAttributeDescription_4, // KmsMasterKeyId
}

// Valid returns 'true' if the value is listed in the SNSCreateTopicAttribute enum map definition, 'false' otherwise
func (i SNSCreateTopicAttribute) Valid() bool {
	for _, v := range _SNSCreateTopicAttributeValues {
		if i == v {
			return true
		}
	}

	return false
}

// ParseByName retrieves a SNSCreateTopicAttribute enum value from the enum string name,
// throws an error if the param is not part of the enum
func (i SNSCreateTopicAttribute) ParseByName(s string) (SNSCreateTopicAttribute, error) {
	if val, ok := _SNSCreateTopicAttributeNameToValueMap[s]; ok {
		// parse ok
		return val, nil
	}

	// error
	return -1, fmt.Errorf("Enum Name of %s Not Expected In SNSCreateTopicAttribute Values List", s)
}

// ParseByKey retrieves a SNSCreateTopicAttribute enum value from the enum string key,
// throws an error if the param is not part of the enum
func (i SNSCreateTopicAttribute) ParseByKey(s string) (SNSCreateTopicAttribute, error) {
	for k, v := range _SNSCreateTopicAttributeValueToKeyMap {
		if v == s {
			// parse ok
			return k, nil
		}
	}

	// error
	return -1, fmt.Errorf("Enum Key of %s Not Expected In SNSCreateTopicAttribute Keys List", s)
}

// Key retrieves a SNSCreateTopicAttribute enum string key
func (i SNSCreateTopicAttribute) Key() string {
	if val, ok := _SNSCreateTopicAttributeValueToKeyMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Caption retrieves a SNSCreateTopicAttribute enum string caption
func (i SNSCreateTopicAttribute) Caption() string {
	if val, ok := _SNSCreateTopicAttributeValueToCaptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Description retrieves a SNSCreateTopicAttribute enum string description
func (i SNSCreateTopicAttribute) Description() string {
	if val, ok := _SNSCreateTopicAttributeValueToDescriptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// IntValue gets the intrinsic enum integer value
func (i SNSCreateTopicAttribute) IntValue() int {
	return int(i)
}

// IntString gets the intrinsic enum integer value represented in string format
func (i SNSCreateTopicAttribute) IntString() string {
	return strconv.Itoa(int(i))
}

// ValueSlice returns all values of the enum SNSCreateTopicAttribute in a slice
func (i SNSCreateTopicAttribute) ValueSlice() []SNSCreateTopicAttribute {
	return _SNSCreateTopicAttributeValues
}

// NameMap returns all names of the enum SNSCreateTopicAttribute in a K:name,V:SNSCreateTopicAttribute map
func (i SNSCreateTopicAttribute) NameMap() map[string]SNSCreateTopicAttribute {
	return _SNSCreateTopicAttributeNameToValueMap
}

// KeyMap returns all keys of the enum SNSCreateTopicAttribute in a K:SNSCreateTopicAttribute,V:key map
func (i SNSCreateTopicAttribute) KeyMap() map[SNSCreateTopicAttribute]string {
	return _SNSCreateTopicAttributeValueToKeyMap
}

// CaptionMap returns all captions of the enum SNSCreateTopicAttribute in a K:SNSCreateTopicAttribute,V:caption map
func (i SNSCreateTopicAttribute) CaptionMap() map[SNSCreateTopicAttribute]string {
	return _SNSCreateTopicAttributeValueToCaptionMap
}

// DescriptionMap returns all descriptions of the enum SNSCreateTopicAttribute in a K:SNSCreateTopicAttribute,V:description map
func (i SNSCreateTopicAttribute) DescriptionMap() map[SNSCreateTopicAttribute]string {
	return _SNSCreateTopicAttributeValueToDescriptionMap
}
