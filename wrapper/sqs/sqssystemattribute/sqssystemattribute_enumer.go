// Code Generated By gen-enumer For "Enum Type: SQSSystemAttribute" - DO NOT EDIT;

/*
 * Copyright 2020 Aldelo, LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package sqssystemattribute

import (
	"fmt"
	"strconv"
)

// enum names constants
const (
	_SQSSystemAttributeName_0 = "UNKNOWN"
	_SQSSystemAttributeName_1 = "All"
	_SQSSystemAttributeName_2 = "ApproximateFirstReceiveTimestamp"
	_SQSSystemAttributeName_3 = "ApproximateReceiveCount"
	_SQSSystemAttributeName_4 = "AWSTraceHeader"
	_SQSSystemAttributeName_5 = "SenderId"
	_SQSSystemAttributeName_6 = "SentTimestamp"
	_SQSSystemAttributeName_7 = "MessageDeduplicationId"
	_SQSSystemAttributeName_8 = "MessageGroupId"
	_SQSSystemAttributeName_9 = "SequenceNumber"
)

// var declares of enum indexes
var (
	_SQSSystemAttributeIndex_0 = [...]uint8{0, 7}
	_SQSSystemAttributeIndex_1 = [...]uint8{0, 3}
	_SQSSystemAttributeIndex_2 = [...]uint8{0, 32}
	_SQSSystemAttributeIndex_3 = [...]uint8{0, 23}
	_SQSSystemAttributeIndex_4 = [...]uint8{0, 14}
	_SQSSystemAttributeIndex_5 = [...]uint8{0, 8}
	_SQSSystemAttributeIndex_6 = [...]uint8{0, 13}
	_SQSSystemAttributeIndex_7 = [...]uint8{0, 22}
	_SQSSystemAttributeIndex_8 = [...]uint8{0, 14}
	_SQSSystemAttributeIndex_9 = [...]uint8{0, 14}
)

func (i SQSSystemAttribute) String() string {
	switch {
	case i == UNKNOWN:
		return _SQSSystemAttributeName_0
	case i == All:
		return _SQSSystemAttributeName_1
	case i == ApproximateFirstReceiveTimestamp:
		return _SQSSystemAttributeName_2
	case i == ApproximateReceiveCount:
		return _SQSSystemAttributeName_3
	case i == AWSTraceHeader:
		return _SQSSystemAttributeName_4
	case i == SenderId:
		return _SQSSystemAttributeName_5
	case i == SentTimestamp:
		return _SQSSystemAttributeName_6
	case i == MessageDeduplicationId:
		return _SQSSystemAttributeName_7
	case i == MessageGroupId:
		return _SQSSystemAttributeName_8
	case i == SequenceNumber:
		return _SQSSystemAttributeName_9
	default:
		return ""
	}
}

var _SQSSystemAttributeValues = []SQSSystemAttribute{
	0, // UNKNOWN
	1, // All
	2, // ApproximateFirstReceiveTimestamp
	3, // ApproximateReceiveCount
	4, // AWSTraceHeader
	5, // SenderId
	6, // SentTimestamp
	7, // MessageDeduplicationId
	8, // MessageGroupId
	9, // SequenceNumber
}

var _SQSSystemAttributeNameToValueMap = map[string]SQSSystemAttribute{
	_SQSSystemAttributeName_0[0:7]:  0, // UNKNOWN
	_SQSSystemAttributeName_1[0:3]:  1, // All
	_SQSSystemAttributeName_2[0:32]: 2, // ApproximateFirstReceiveTimestamp
	_SQSSystemAttributeName_3[0:23]: 3, // ApproximateReceiveCount
	_SQSSystemAttributeName_4[0:14]: 4, // AWSTraceHeader
	_SQSSystemAttributeName_5[0:8]:  5, // SenderId
	_SQSSystemAttributeName_6[0:13]: 6, // SentTimestamp
	_SQSSystemAttributeName_7[0:22]: 7, // MessageDeduplicationId
	_SQSSystemAttributeName_8[0:14]: 8, // MessageGroupId
	_SQSSystemAttributeName_9[0:14]: 9, // SequenceNumber
}

var _SQSSystemAttributeValueToKeyMap = map[SQSSystemAttribute]string{
	0: _SQSSystemAttributeKey_0, // UNKNOWN
	1: _SQSSystemAttributeKey_1, // All
	2: _SQSSystemAttributeKey_2, // ApproximateFirstReceiveTimestamp
	3: _SQSSystemAttributeKey_3, // ApproximateReceiveCount
	4: _SQSSystemAttributeKey_4, // AWSTraceHeader
	5: _SQSSystemAttributeKey_5, // SenderId
	6: _SQSSystemAttributeKey_6, // SentTimestamp
	7: _SQSSystemAttributeKey_7, // MessageDeduplicationId
	8: _SQSSystemAttributeKey_8, // MessageGroupId
	9: _SQSSystemAttributeKey_9, // SequenceNumber
}

var _SQSSystemAttributeValueToCaptionMap = map[SQSSystemAttribute]string{
	0: _SQSSystemAttributeCaption_0, // UNKNOWN
	1: _SQSSystemAttributeCaption_1, // All
	2: _SQSSystemAttributeCaption_2, // ApproximateFirstReceiveTimestamp
	3: _SQSSystemAttributeCaption_3, // ApproximateReceiveCount
	4: _SQSSystemAttributeCaption_4, // AWSTraceHeader
	5: _SQSSystemAttributeCaption_5, // SenderId
	6: _SQSSystemAttributeCaption_6, // SentTimestamp
	7: _SQSSystemAttributeCaption_7, // MessageDeduplicationId
	8: _SQSSystemAttributeCaption_8, // MessageGroupId
	9: _SQSSystemAttributeCaption_9, // SequenceNumber
}

var _SQSSystemAttributeValueToDescriptionMap = map[SQSSystemAttribute]string{
	0: _SQSSystemAttributeDescription_0, // UNKNOWN
	1: _SQSSystemAttributeDescription_1, // All
	2: _SQSSystemAttributeDescription_2, // ApproximateFirstReceiveTimestamp
	3: _SQSSystemAttributeDescription_3, // ApproximateReceiveCount
	4: _SQSSystemAttributeDescription_4, // AWSTraceHeader
	5: _SQSSystemAttributeDescription_5, // SenderId
	6: _SQSSystemAttributeDescription_6, // SentTimestamp
	7: _SQSSystemAttributeDescription_7, // MessageDeduplicationId
	8: _SQSSystemAttributeDescription_8, // MessageGroupId
	9: _SQSSystemAttributeDescription_9, // SequenceNumber
}

// Valid returns 'true' if the value is listed in the SQSSystemAttribute enum map definition, 'false' otherwise
func (i SQSSystemAttribute) Valid() bool {
	for _, v := range _SQSSystemAttributeValues {
		if i == v {
			return true
		}
	}

	return false
}

// ParseByName retrieves a SQSSystemAttribute enum value from the enum string name,
// throws an error if the param is not part of the enum
func (i SQSSystemAttribute) ParseByName(s string) (SQSSystemAttribute, error) {
	if val, ok := _SQSSystemAttributeNameToValueMap[s]; ok {
		// parse ok
		return val, nil
	}

	// error
	return -1, fmt.Errorf("Enum Name of %s Not Expected In SQSSystemAttribute Values List", s)
}

// ParseByKey retrieves a SQSSystemAttribute enum value from the enum string key,
// throws an error if the param is not part of the enum
func (i SQSSystemAttribute) ParseByKey(s string) (SQSSystemAttribute, error) {
	for k, v := range _SQSSystemAttributeValueToKeyMap {
		if v == s {
			// parse ok
			return k, nil
		}
	}

	// error
	return -1, fmt.Errorf("Enum Key of %s Not Expected In SQSSystemAttribute Keys List", s)
}

// Key retrieves a SQSSystemAttribute enum string key
func (i SQSSystemAttribute) Key() string {
	if val, ok := _SQSSystemAttributeValueToKeyMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Caption retrieves a SQSSystemAttribute enum string caption
func (i SQSSystemAttribute) Caption() string {
	if val, ok := _SQSSystemAttributeValueToCaptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Description retrieves a SQSSystemAttribute enum string description
func (i SQSSystemAttribute) Description() string {
	if val, ok := _SQSSystemAttributeValueToDescriptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// IntValue gets the intrinsic enum integer value
func (i SQSSystemAttribute) IntValue() int {
	return int(i)
}

// IntString gets the intrinsic enum integer value represented in string format
func (i SQSSystemAttribute) IntString() string {
	return strconv.Itoa(int(i))
}

// ValueSlice returns all values of the enum SQSSystemAttribute in a slice
func (i SQSSystemAttribute) ValueSlice() []SQSSystemAttribute {
	return _SQSSystemAttributeValues
}

// NameMap returns all names of the enum SQSSystemAttribute in a K:name,V:SQSSystemAttribute map
func (i SQSSystemAttribute) NameMap() map[string]SQSSystemAttribute {
	return _SQSSystemAttributeNameToValueMap
}

// KeyMap returns all keys of the enum SQSSystemAttribute in a K:SQSSystemAttribute,V:key map
func (i SQSSystemAttribute) KeyMap() map[SQSSystemAttribute]string {
	return _SQSSystemAttributeValueToKeyMap
}

// CaptionMap returns all captions of the enum SQSSystemAttribute in a K:SQSSystemAttribute,V:caption map
func (i SQSSystemAttribute) CaptionMap() map[SQSSystemAttribute]string {
	return _SQSSystemAttributeValueToCaptionMap
}

// DescriptionMap returns all descriptions of the enum SQSSystemAttribute in a K:SQSSystemAttribute,V:description map
func (i SQSSystemAttribute) DescriptionMap() map[SQSSystemAttribute]string {
	return _SQSSystemAttributeValueToDescriptionMap
}
