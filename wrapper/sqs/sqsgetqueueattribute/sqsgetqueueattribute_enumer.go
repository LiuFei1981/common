// Code Generated By gen-enumer For "Enum Type: SQSGetQueueAttribute" - DO NOT EDIT;

/*
 * Copyright 2020 Aldelo, LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package sqsgetqueueattribute

import (
	"fmt"
	"strconv"
)

// enum names constants
const (
	_SQSGetQueueAttributeName_0  = "UNKNOWN"
	_SQSGetQueueAttributeName_1  = "All"
	_SQSGetQueueAttributeName_2  = "ApproximateNumberOfMessages"
	_SQSGetQueueAttributeName_3  = "ApproximateNumberOfMessagesDelayed"
	_SQSGetQueueAttributeName_4  = "ApproximateNumberOfMessagesNotVisible"
	_SQSGetQueueAttributeName_5  = "CreatedTimestamp"
	_SQSGetQueueAttributeName_6  = "DelaySeconds"
	_SQSGetQueueAttributeName_7  = "LastModifiedTimestamp"
	_SQSGetQueueAttributeName_8  = "MaximumMessageSize"
	_SQSGetQueueAttributeName_9  = "MessageRetentionPeriod"
	_SQSGetQueueAttributeName_10 = "Policy"
	_SQSGetQueueAttributeName_11 = "QueueArn"
	_SQSGetQueueAttributeName_12 = "ReceiveMessageWaitTimeSeconds"
	_SQSGetQueueAttributeName_13 = "RedrivePolicy"
	_SQSGetQueueAttributeName_14 = "DeadLetterTargetArn"
	_SQSGetQueueAttributeName_15 = "MaxReceiveCount"
	_SQSGetQueueAttributeName_16 = "VisibilityTimeout"
	_SQSGetQueueAttributeName_17 = "KmsMasterKeyId"
	_SQSGetQueueAttributeName_18 = "KmsDataKeyReusePeriodSeconds"
	_SQSGetQueueAttributeName_19 = "FifoQueue"
	_SQSGetQueueAttributeName_20 = "ContentBasedDeduplication"
)

// var declares of enum indexes
var (
	_SQSGetQueueAttributeIndex_0  = [...]uint8{0, 7}
	_SQSGetQueueAttributeIndex_1  = [...]uint8{0, 3}
	_SQSGetQueueAttributeIndex_2  = [...]uint8{0, 27}
	_SQSGetQueueAttributeIndex_3  = [...]uint8{0, 34}
	_SQSGetQueueAttributeIndex_4  = [...]uint8{0, 37}
	_SQSGetQueueAttributeIndex_5  = [...]uint8{0, 16}
	_SQSGetQueueAttributeIndex_6  = [...]uint8{0, 12}
	_SQSGetQueueAttributeIndex_7  = [...]uint8{0, 21}
	_SQSGetQueueAttributeIndex_8  = [...]uint8{0, 18}
	_SQSGetQueueAttributeIndex_9  = [...]uint8{0, 22}
	_SQSGetQueueAttributeIndex_10 = [...]uint8{0, 6}
	_SQSGetQueueAttributeIndex_11 = [...]uint8{0, 8}
	_SQSGetQueueAttributeIndex_12 = [...]uint8{0, 29}
	_SQSGetQueueAttributeIndex_13 = [...]uint8{0, 13}
	_SQSGetQueueAttributeIndex_14 = [...]uint8{0, 19}
	_SQSGetQueueAttributeIndex_15 = [...]uint8{0, 15}
	_SQSGetQueueAttributeIndex_16 = [...]uint8{0, 17}
	_SQSGetQueueAttributeIndex_17 = [...]uint8{0, 14}
	_SQSGetQueueAttributeIndex_18 = [...]uint8{0, 28}
	_SQSGetQueueAttributeIndex_19 = [...]uint8{0, 9}
	_SQSGetQueueAttributeIndex_20 = [...]uint8{0, 25}
)

func (i SQSGetQueueAttribute) String() string {
	switch {
	case i == UNKNOWN:
		return _SQSGetQueueAttributeName_0
	case i == All:
		return _SQSGetQueueAttributeName_1
	case i == ApproximateNumberOfMessages:
		return _SQSGetQueueAttributeName_2
	case i == ApproximateNumberOfMessagesDelayed:
		return _SQSGetQueueAttributeName_3
	case i == ApproximateNumberOfMessagesNotVisible:
		return _SQSGetQueueAttributeName_4
	case i == CreatedTimestamp:
		return _SQSGetQueueAttributeName_5
	case i == DelaySeconds:
		return _SQSGetQueueAttributeName_6
	case i == LastModifiedTimestamp:
		return _SQSGetQueueAttributeName_7
	case i == MaximumMessageSize:
		return _SQSGetQueueAttributeName_8
	case i == MessageRetentionPeriod:
		return _SQSGetQueueAttributeName_9
	case i == Policy:
		return _SQSGetQueueAttributeName_10
	case i == QueueArn:
		return _SQSGetQueueAttributeName_11
	case i == ReceiveMessageWaitTimeSeconds:
		return _SQSGetQueueAttributeName_12
	case i == RedrivePolicy:
		return _SQSGetQueueAttributeName_13
	case i == DeadLetterTargetArn:
		return _SQSGetQueueAttributeName_14
	case i == MaxReceiveCount:
		return _SQSGetQueueAttributeName_15
	case i == VisibilityTimeout:
		return _SQSGetQueueAttributeName_16
	case i == KmsMasterKeyId:
		return _SQSGetQueueAttributeName_17
	case i == KmsDataKeyReusePeriodSeconds:
		return _SQSGetQueueAttributeName_18
	case i == FifoQueue:
		return _SQSGetQueueAttributeName_19
	case i == ContentBasedDeduplication:
		return _SQSGetQueueAttributeName_20
	default:
		return ""
	}
}

var _SQSGetQueueAttributeValues = []SQSGetQueueAttribute{
	0,  // UNKNOWN
	1,  // All
	2,  // ApproximateNumberOfMessages
	3,  // ApproximateNumberOfMessagesDelayed
	4,  // ApproximateNumberOfMessagesNotVisible
	5,  // CreatedTimestamp
	6,  // DelaySeconds
	7,  // LastModifiedTimestamp
	8,  // MaximumMessageSize
	9,  // MessageRetentionPeriod
	10, // Policy
	11, // QueueArn
	12, // ReceiveMessageWaitTimeSeconds
	13, // RedrivePolicy
	14, // DeadLetterTargetArn
	15, // MaxReceiveCount
	16, // VisibilityTimeout
	17, // KmsMasterKeyId
	18, // KmsDataKeyReusePeriodSeconds
	19, // FifoQueue
	20, // ContentBasedDeduplication
}

var _SQSGetQueueAttributeNameToValueMap = map[string]SQSGetQueueAttribute{
	_SQSGetQueueAttributeName_0[0:7]:   0,  // UNKNOWN
	_SQSGetQueueAttributeName_1[0:3]:   1,  // All
	_SQSGetQueueAttributeName_2[0:27]:  2,  // ApproximateNumberOfMessages
	_SQSGetQueueAttributeName_3[0:34]:  3,  // ApproximateNumberOfMessagesDelayed
	_SQSGetQueueAttributeName_4[0:37]:  4,  // ApproximateNumberOfMessagesNotVisible
	_SQSGetQueueAttributeName_5[0:16]:  5,  // CreatedTimestamp
	_SQSGetQueueAttributeName_6[0:12]:  6,  // DelaySeconds
	_SQSGetQueueAttributeName_7[0:21]:  7,  // LastModifiedTimestamp
	_SQSGetQueueAttributeName_8[0:18]:  8,  // MaximumMessageSize
	_SQSGetQueueAttributeName_9[0:22]:  9,  // MessageRetentionPeriod
	_SQSGetQueueAttributeName_10[0:6]:  10, // Policy
	_SQSGetQueueAttributeName_11[0:8]:  11, // QueueArn
	_SQSGetQueueAttributeName_12[0:29]: 12, // ReceiveMessageWaitTimeSeconds
	_SQSGetQueueAttributeName_13[0:13]: 13, // RedrivePolicy
	_SQSGetQueueAttributeName_14[0:19]: 14, // DeadLetterTargetArn
	_SQSGetQueueAttributeName_15[0:15]: 15, // MaxReceiveCount
	_SQSGetQueueAttributeName_16[0:17]: 16, // VisibilityTimeout
	_SQSGetQueueAttributeName_17[0:14]: 17, // KmsMasterKeyId
	_SQSGetQueueAttributeName_18[0:28]: 18, // KmsDataKeyReusePeriodSeconds
	_SQSGetQueueAttributeName_19[0:9]:  19, // FifoQueue
	_SQSGetQueueAttributeName_20[0:25]: 20, // ContentBasedDeduplication
}

var _SQSGetQueueAttributeValueToKeyMap = map[SQSGetQueueAttribute]string{
	0:  _SQSGetQueueAttributeKey_0,  // UNKNOWN
	1:  _SQSGetQueueAttributeKey_1,  // All
	2:  _SQSGetQueueAttributeKey_2,  // ApproximateNumberOfMessages
	3:  _SQSGetQueueAttributeKey_3,  // ApproximateNumberOfMessagesDelayed
	4:  _SQSGetQueueAttributeKey_4,  // ApproximateNumberOfMessagesNotVisible
	5:  _SQSGetQueueAttributeKey_5,  // CreatedTimestamp
	6:  _SQSGetQueueAttributeKey_6,  // DelaySeconds
	7:  _SQSGetQueueAttributeKey_7,  // LastModifiedTimestamp
	8:  _SQSGetQueueAttributeKey_8,  // MaximumMessageSize
	9:  _SQSGetQueueAttributeKey_9,  // MessageRetentionPeriod
	10: _SQSGetQueueAttributeKey_10, // Policy
	11: _SQSGetQueueAttributeKey_11, // QueueArn
	12: _SQSGetQueueAttributeKey_12, // ReceiveMessageWaitTimeSeconds
	13: _SQSGetQueueAttributeKey_13, // RedrivePolicy
	14: _SQSGetQueueAttributeKey_14, // DeadLetterTargetArn
	15: _SQSGetQueueAttributeKey_15, // MaxReceiveCount
	16: _SQSGetQueueAttributeKey_16, // VisibilityTimeout
	17: _SQSGetQueueAttributeKey_17, // KmsMasterKeyId
	18: _SQSGetQueueAttributeKey_18, // KmsDataKeyReusePeriodSeconds
	19: _SQSGetQueueAttributeKey_19, // FifoQueue
	20: _SQSGetQueueAttributeKey_20, // ContentBasedDeduplication
}

var _SQSGetQueueAttributeValueToCaptionMap = map[SQSGetQueueAttribute]string{
	0:  _SQSGetQueueAttributeCaption_0,  // UNKNOWN
	1:  _SQSGetQueueAttributeCaption_1,  // All
	2:  _SQSGetQueueAttributeCaption_2,  // ApproximateNumberOfMessages
	3:  _SQSGetQueueAttributeCaption_3,  // ApproximateNumberOfMessagesDelayed
	4:  _SQSGetQueueAttributeCaption_4,  // ApproximateNumberOfMessagesNotVisible
	5:  _SQSGetQueueAttributeCaption_5,  // CreatedTimestamp
	6:  _SQSGetQueueAttributeCaption_6,  // DelaySeconds
	7:  _SQSGetQueueAttributeCaption_7,  // LastModifiedTimestamp
	8:  _SQSGetQueueAttributeCaption_8,  // MaximumMessageSize
	9:  _SQSGetQueueAttributeCaption_9,  // MessageRetentionPeriod
	10: _SQSGetQueueAttributeCaption_10, // Policy
	11: _SQSGetQueueAttributeCaption_11, // QueueArn
	12: _SQSGetQueueAttributeCaption_12, // ReceiveMessageWaitTimeSeconds
	13: _SQSGetQueueAttributeCaption_13, // RedrivePolicy
	14: _SQSGetQueueAttributeCaption_14, // DeadLetterTargetArn
	15: _SQSGetQueueAttributeCaption_15, // MaxReceiveCount
	16: _SQSGetQueueAttributeCaption_16, // VisibilityTimeout
	17: _SQSGetQueueAttributeCaption_17, // KmsMasterKeyId
	18: _SQSGetQueueAttributeCaption_18, // KmsDataKeyReusePeriodSeconds
	19: _SQSGetQueueAttributeCaption_19, // FifoQueue
	20: _SQSGetQueueAttributeCaption_20, // ContentBasedDeduplication
}

var _SQSGetQueueAttributeValueToDescriptionMap = map[SQSGetQueueAttribute]string{
	0:  _SQSGetQueueAttributeDescription_0,  // UNKNOWN
	1:  _SQSGetQueueAttributeDescription_1,  // All
	2:  _SQSGetQueueAttributeDescription_2,  // ApproximateNumberOfMessages
	3:  _SQSGetQueueAttributeDescription_3,  // ApproximateNumberOfMessagesDelayed
	4:  _SQSGetQueueAttributeDescription_4,  // ApproximateNumberOfMessagesNotVisible
	5:  _SQSGetQueueAttributeDescription_5,  // CreatedTimestamp
	6:  _SQSGetQueueAttributeDescription_6,  // DelaySeconds
	7:  _SQSGetQueueAttributeDescription_7,  // LastModifiedTimestamp
	8:  _SQSGetQueueAttributeDescription_8,  // MaximumMessageSize
	9:  _SQSGetQueueAttributeDescription_9,  // MessageRetentionPeriod
	10: _SQSGetQueueAttributeDescription_10, // Policy
	11: _SQSGetQueueAttributeDescription_11, // QueueArn
	12: _SQSGetQueueAttributeDescription_12, // ReceiveMessageWaitTimeSeconds
	13: _SQSGetQueueAttributeDescription_13, // RedrivePolicy
	14: _SQSGetQueueAttributeDescription_14, // DeadLetterTargetArn
	15: _SQSGetQueueAttributeDescription_15, // MaxReceiveCount
	16: _SQSGetQueueAttributeDescription_16, // VisibilityTimeout
	17: _SQSGetQueueAttributeDescription_17, // KmsMasterKeyId
	18: _SQSGetQueueAttributeDescription_18, // KmsDataKeyReusePeriodSeconds
	19: _SQSGetQueueAttributeDescription_19, // FifoQueue
	20: _SQSGetQueueAttributeDescription_20, // ContentBasedDeduplication
}

// Valid returns 'true' if the value is listed in the SQSGetQueueAttribute enum map definition, 'false' otherwise
func (i SQSGetQueueAttribute) Valid() bool {
	for _, v := range _SQSGetQueueAttributeValues {
		if i == v {
			return true
		}
	}

	return false
}

// ParseByName retrieves a SQSGetQueueAttribute enum value from the enum string name,
// throws an error if the param is not part of the enum
func (i SQSGetQueueAttribute) ParseByName(s string) (SQSGetQueueAttribute, error) {
	if val, ok := _SQSGetQueueAttributeNameToValueMap[s]; ok {
		// parse ok
		return val, nil
	}

	// error
	return -1, fmt.Errorf("Enum Name of %s Not Expected In SQSGetQueueAttribute Values List", s)
}

// ParseByKey retrieves a SQSGetQueueAttribute enum value from the enum string key,
// throws an error if the param is not part of the enum
func (i SQSGetQueueAttribute) ParseByKey(s string) (SQSGetQueueAttribute, error) {
	for k, v := range _SQSGetQueueAttributeValueToKeyMap {
		if v == s {
			// parse ok
			return k, nil
		}
	}

	// error
	return -1, fmt.Errorf("Enum Key of %s Not Expected In SQSGetQueueAttribute Keys List", s)
}

// Key retrieves a SQSGetQueueAttribute enum string key
func (i SQSGetQueueAttribute) Key() string {
	if val, ok := _SQSGetQueueAttributeValueToKeyMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Caption retrieves a SQSGetQueueAttribute enum string caption
func (i SQSGetQueueAttribute) Caption() string {
	if val, ok := _SQSGetQueueAttributeValueToCaptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// Description retrieves a SQSGetQueueAttribute enum string description
func (i SQSGetQueueAttribute) Description() string {
	if val, ok := _SQSGetQueueAttributeValueToDescriptionMap[i]; ok {
		// found
		return val
	} else {
		// not found
		return ""
	}
}

// IntValue gets the intrinsic enum integer value
func (i SQSGetQueueAttribute) IntValue() int {
	return int(i)
}

// IntString gets the intrinsic enum integer value represented in string format
func (i SQSGetQueueAttribute) IntString() string {
	return strconv.Itoa(int(i))
}

// ValueSlice returns all values of the enum SQSGetQueueAttribute in a slice
func (i SQSGetQueueAttribute) ValueSlice() []SQSGetQueueAttribute {
	return _SQSGetQueueAttributeValues
}

// NameMap returns all names of the enum SQSGetQueueAttribute in a K:name,V:SQSGetQueueAttribute map
func (i SQSGetQueueAttribute) NameMap() map[string]SQSGetQueueAttribute {
	return _SQSGetQueueAttributeNameToValueMap
}

// KeyMap returns all keys of the enum SQSGetQueueAttribute in a K:SQSGetQueueAttribute,V:key map
func (i SQSGetQueueAttribute) KeyMap() map[SQSGetQueueAttribute]string {
	return _SQSGetQueueAttributeValueToKeyMap
}

// CaptionMap returns all captions of the enum SQSGetQueueAttribute in a K:SQSGetQueueAttribute,V:caption map
func (i SQSGetQueueAttribute) CaptionMap() map[SQSGetQueueAttribute]string {
	return _SQSGetQueueAttributeValueToCaptionMap
}

// DescriptionMap returns all descriptions of the enum SQSGetQueueAttribute in a K:SQSGetQueueAttribute,V:description map
func (i SQSGetQueueAttribute) DescriptionMap() map[SQSGetQueueAttribute]string {
	return _SQSGetQueueAttributeValueToDescriptionMap
}
